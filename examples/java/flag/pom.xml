<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>https0x3A0x2F0x2Fgithub0x2Ecom0x2Ftangfeixiong.go-to-docker.examples.java.flag</groupId>
	<artifactId>refresh-cm</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>Refresh Controller Manager</name>
	<url>https://github.com/tangfeixiong/go-to-docker/master/examples/java/flag</url>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.3.RELEASE</version>
	</parent>

	<properties>
		<java.version>1.8</java.version>
        <springfox.version>2.7.0</springfox.version>
		<image.namespace>docker.io</image.namespace>
		<image.name>tangfeixiong/refresh-cm</image.name>
		<image.tag>0.1</image.tag>
	</properties>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>3.8.1</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<!-- 不添加版本是因为parent中已经有了 -->
		</dependency>

		<!-- servlet 依赖. -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- JSTL -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
		</dependency>
		<!-- tomcat 的支持. -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-jasper</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-cache</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-redis</artifactId>
		</dependency>
        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-redis</artifactId>
            <version>1.8.7.RELEASE</version>
			<optional>true</optional>
        </dependency>
		<dependency>
			<groupId>redis.clients</groupId>
			<artifactId>jedis</artifactId>
			<version>2.9.0</version>
			<optional>true</optional>
		</dependency>
        <!-- https://mvnrepository.com/artifact/biz.paluch.redis/lettuce -->
		<dependency>
			<groupId>biz.paluch.redis</groupId>
			<artifactId>lettuce</artifactId>
			<version>4.2.2.Final</version>
			<optional>true</optional>
		</dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
            <version>2.4.0</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>6.0.23.Final</version>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.16.2</version>
            <scope>provided</scope>
        </dependency>

        <!-- API documentation using swagger.io -->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>${springfox.version}</version>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>${springfox.version}</version>
        </dependency>
		<!-- https://mvnrepository.com/artifact/joda-time/joda-time -->
		<dependency>
		    <groupId>joda-time</groupId>
		    <artifactId>joda-time</artifactId>
		    <version>2.3</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<mainClass>cn.com.isc.App</mainClass>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

            <!-- https://github.com/fabric8io/docker-maven-plugin -->
			<plugin>
              <groupId>io.fabric8</groupId>
              <artifactId>docker-maven-plugin</artifactId>
              <version>0.21.0</version>
              <extensions>true</extensions>
			  <configuration>
			    <showLogs>true</showLogs>
			    <images>
			      <image>
			        <name>${image.namespace}/${image.name}:${image.tag}</name>
			        <build>
			          <assembly>
					    <!--<descriptorRef>artifact-with-dependencies</descriptorRef>-->
                        <descriptorRef>artifact</descriptorRef>
                      </assembly>
                      <!--<dockerFileDir>${project.basedir}/src/main/docker/io-dot-fabric8</dockerFileDir>-->
                      <dockerFileDir>io-dot-fabric8</dockerFileDir>
                      <args>
                        <jarTgt>${project.build.finalName}.jar</jarTgt>
                      </args>
					 <cleanup>remove</cleanup>
                      <nocache>true</nocache>
			        </build>
			      </image>
			    </images>
			  </configuration>
			  <executions>
			    <execution>
			      <id>docker-build</id>
			      <goals>
			        <goal>build</goal>
			      </goals>
			    </execution>
			  </executions>
			</plugin>

		</plugins>

	</build>
	<!-- <build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build> -->
	

</project>
